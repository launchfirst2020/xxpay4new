<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.xxpay</groupId>
  <artifactId>xxpay</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>
  <name>xxpay</name>
  <description>xxpay</description>

  <modules>
    <module>xxpay-core</module>
    <module>xxpay-manage</module>
    <module>xxpay-member</module>
    <module>xxpay-merchant</module>
    <module>xxpay-agent</module>
	<module>xxpay-isv</module>
    <module>xxpay-pay</module>
    <module>xxpay-service</module>
    <module>xxpay-task</module>
  </modules>

	<!--  spring boot项目 继承父包  -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.7.RELEASE</version>
		<!--
		<version>2.2.0.RELEASE</version>
		-->
	</parent>

	<!-- 公共属性 -->
  <properties>
	  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	  <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	  <java.version>1.8</java.version>
	  <spring-boot.version>2.1.7.RELEASE</spring-boot.version>
	  <fastjson.version>1.2.58</fastjson.version>
	  <mysql.connector.java.version>5.1.34</mysql.connector.java.version>
	  <dubbo.version>2.7.1</dubbo.version>
	  <binarywang.version>3.6.0</binarywang.version>
	  <projectRootDir>${basedir}</projectRootDir>
  </properties>

  <!-- 所有项目公共依赖文件 -->
  <dependencies>
      <!-- xxpay-service 项目  -->
      <dependency>
          <groupId>org.xxpay</groupId>
          <artifactId>xxpay-service</artifactId>
          <version>1.0.0</version>
      </dependency>

      <!-- Spring Boot -->
	  <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-dependencies</artifactId>
		  <version>${spring-boot.version}</version>
		  <type>pom</type>
		  <scope>import</scope>
	  </dependency>

	  <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter</artifactId>
	  </dependency>

	  <!-- spring-boot的web启动的jar包 -->
	  <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-web</artifactId>
	  </dependency>

	  <!-- Dubbo Spring Boot Starter -->
	  <dependency>
		  <groupId>org.apache.dubbo</groupId>
		  <artifactId>dubbo-spring-boot-starter</artifactId>
		  <version>2.7.1</version>
	  </dependency>

	  <dependency>
		  <groupId>org.apache.dubbo</groupId>
		  <artifactId>dubbo</artifactId>
		  <version>2.7.1</version>
	  </dependency>
	  <!-- Zookeeper dependencies -->
	  <dependency>
		  <groupId>org.apache.dubbo</groupId>
		  <artifactId>dubbo-dependencies-zookeeper</artifactId>
		  <version>${dubbo.version}</version>
		  <type>pom</type>
	  </dependency>
    
  </dependencies>
  
  <!-- 依赖管理，按需添加 -->
  <dependencyManagement>
	<dependencies>
	
		<!-- JWT  -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.0</version>
		</dependency>
		
		<!-- commons-io  -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>

		<!-- 微信公众号工具包 -->
		<dependency>
			<groupId>com.github.binarywang</groupId>
			<artifactId>weixin-java-mp</artifactId>
			<version>${binarywang.version}</version>
		</dependency>

		<!-- 微信开放平台工具包  -->
		<dependency>
			<groupId>com.github.binarywang</groupId>
			<artifactId>weixin-java-open</artifactId>
			<version>${binarywang.version}</version>
		</dependency>
		
		<!-- 二维码工具zxing -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.1.0</version>
		</dependency>
		
		<!-- POI依赖 -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.14</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.14</version>
		</dependency>
		
		
		<!-- parse html  可用于生成支付宝wap支付url,解析html-->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.11.3</version>
        </dependency>
        
        <!-- csv工具  可用于生成对账文件 -->
		<dependency>
			<groupId>net.sourceforge.javacsv</groupId>
			<artifactId>javacsv</artifactId>
			<version>2.0</version>
		</dependency>

		<!-- 阿里云 oss存储 -->
		<dependency>
			<groupId>com.aliyun.oss</groupId>
			<artifactId>aliyun-sdk-oss</artifactId>
			<version>3.7.0</version>
		</dependency>

		<!-- system 本地依赖jar ,如需使用需在项目中按systemPath目录进行添加。  -->
		<!--阿里云短信依赖-->
		<dependency>
			<groupId>com.aliyun.sdk</groupId>
			<artifactId>aliyun-core</artifactId>
			<version>3.3.1</version>
			<scope>system</scope>
			<systemPath>${projectRootDir}/libs/aliyun-java-sdk-core-3.3.1.jar</systemPath>
		</dependency>
		
		<!-- 阿里大于  -->
		<dependency>
			<groupId>com.aliyun.sdk</groupId>
			<artifactId>aliyun-dysmsapi</artifactId>
			<version>1.0.0</version>
			<scope>system</scope>
			<systemPath>${projectRootDir}/libs/aliyun-java-sdk-dysmsapi-1.0.0.jar</systemPath>
		</dependency>

		<!-- alipay_pay -->
		<dependency>
			<groupId>com.alipay.sdk</groupId>
			<artifactId>alipay-sdk-java</artifactId>
			<version>4.9.13.ALL</version>
		</dependency>

        <!-- sand pay -->
        <dependency>
            <groupId>cn.com.sand.online</groupId>
            <artifactId>sand-agent-service-sdk</artifactId>
            <version>1.0.0</version>
            <scope>system</scope>
            <systemPath>${projectRootDir}/libs/sand-agent-service-sdk-1.0.0.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>com.sand</groupId>
            <artifactId>sand-sandutil</artifactId>
            <version>0.0.1</version>
            <scope>system</scope>
            <systemPath>${projectRootDir}/libs/sand-sandutil-0.0.1.jar</systemPath>
        </dependency>

		<!-- getui相关jar -->
		<dependency>
			<groupId>com.gexin</groupId>
			<artifactId>gexin-rp-fastjson</artifactId>
			<version>1.0.0.2</version>
			<scope>system</scope>
			<systemPath>${projectRootDir}/libs/getui/gexin-rp-fastjson-1.0.0.2.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.gexin</groupId>
			<artifactId>gexin-rp-sdk-base</artifactId>
			<version>4.0.0.29</version>
			<scope>system</scope>
			<systemPath>${projectRootDir}/libs/getui/gexin-rp-sdk-base-4.0.0.29.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.gexin</groupId>
			<artifactId>gexin-rp-sdk-http</artifactId>
			<version>4.1.0.4</version>
			<scope>system</scope>
			<systemPath>${projectRootDir}/libs/getui/gexin-rp-sdk-http-4.1.0.4.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.gexin</groupId>
			<artifactId>gexin-rp-sdk-template</artifactId>
			<version>4.0.0.23</version>
			<scope>system</scope>
			<systemPath>${projectRootDir}/libs/getui/gexin-rp-sdk-template-4.0.0.23.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.gexin</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>2.5.0</version>
			<scope>system</scope>
			<systemPath>${projectRootDir}/libs/getui/protobuf-java-2.5.0.jar</systemPath>
		</dependency>

		<!-- 微信支付相关jar,暂时用本地依赖 -->
		<dependency>
			<groupId>com.github.binarywang</groupId>
			<artifactId>weixin-java-pay</artifactId>
			<version>${binarywang.version}</version>
		</dependency>

        <!-- 微信进件相关jar -->
        <dependency>
            <groupId>com.github.wechatpay-apiv3</groupId>
            <artifactId>wechatpay-apache-httpclient</artifactId>
            <version>0.1.5</version>
        </dependency>

	</dependencies>
  </dependencyManagement>

	<!--微信apiv3依赖-->
	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

   <!-- 配置项目通用属性 , 可在properties中直接通过${propName}引用  -->
	<profiles>
	
		<profile> <!-- 开发/本地 默认激活 -->
			<id>dev</id>
			<activation><activeByDefault>true</activeByDefault></activation> <!--默认启用的是dev环境配置-->
			<properties>
				<env>dev</env>
			</properties>
		</profile>
		
		<profile>	<!-- 测试环境 -->
			<id>test</id>
			<properties>
				<env>test</env>
			</properties>	
		</profile>
		
		<profile>
			<id>prod</id> <!-- 生产环境 -->
			<properties>
				<env>prod</env>
			</properties>
		</profile>
	</profiles>
  
  	<!-- 构建项目相关配置 -->
 	<build>
		<filters>
		    <!-- parent通用配置 ；优先级低于项目个性化定制参数，当项目配置与通用配置 名称相同，将使用项目配置内容  -->
	    	<filter>${projectRootDir}/profiles/commons-${env}-filter.properties</filter>
	    	<!-- 项目自定义配置  -->
	    	<filter>src/main/filters/${env}-filter.properties</filter>
	 	</filters>
		
		<!-- 资源文件 -->
		<resources>
		
			<resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/mapper/*Mapper.xml</include> <!-- 将mapper.xml 打包 -->
                </includes>
            </resource>
		
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>templates/**</include>
					<include>static/**</include>
				</includes>
			</resource>
			
			<resource> <!-- 配置需要被替换的资源文件路径 -->
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.yml</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<finalName>${project.name}</finalName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>${projectRootDir}/assembly/package.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!--是否跳过单元测试-->
					<skipTests>true</skipTests>
					<!--是否忽略单元测试错误-->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
</project>
