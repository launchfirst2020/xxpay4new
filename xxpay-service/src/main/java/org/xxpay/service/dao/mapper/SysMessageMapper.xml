<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xxpay.service.dao.mapper.SysMessageMapper">
  <resultMap id="BaseResultMap" type="org.xxpay.core.entity.SysMessage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="createUserId" jdbcType="BIGINT" property="createUserId" />
    <result column="isvStatus" jdbcType="TINYINT" property="isvStatus" />
    <result column="agentStatus" jdbcType="TINYINT" property="agentStatus" />
    <result column="mchStatus" jdbcType="TINYINT" property="mchStatus" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.xxpay.core.entity.SysMessage">
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, status, createUserId, isvStatus, agentStatus, mchStatus, createTime, updateTime
  </sql>
  <sql id="Blob_Column_List">
    message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.xxpay.core.entity.SysMessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_sys_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.xxpay.core.entity.SysMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sys_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_sys_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_sys_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.xxpay.core.entity.SysMessageExample">
    delete from t_sys_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.xxpay.core.entity.SysMessage">
    insert into t_sys_message (id, title, status,
      createUserId, isvStatus, agentStatus,
      mchStatus, createTime, updateTime,
      message)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
      #{createUserId,jdbcType=BIGINT}, #{isvStatus,jdbcType=TINYINT}, #{agentStatus,jdbcType=TINYINT},
      #{mchStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.xxpay.core.entity.SysMessage">
    insert into t_sys_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUserId != null">
        createUserId,
      </if>
      <if test="isvStatus != null">
        isvStatus,
      </if>
      <if test="agentStatus != null">
        agentStatus,
      </if>
      <if test="mchStatus != null">
        mchStatus,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="isvStatus != null">
        #{isvStatus,jdbcType=TINYINT},
      </if>
      <if test="agentStatus != null">
        #{agentStatus,jdbcType=TINYINT},
      </if>
      <if test="mchStatus != null">
        #{mchStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.xxpay.core.entity.SysMessageExample" resultType="java.lang.Integer">
    select count(*) from t_sys_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_sys_message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createUserId != null">
        createUserId = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.isvStatus != null">
        isvStatus = #{record.isvStatus,jdbcType=TINYINT},
      </if>
      <if test="record.agentStatus != null">
        agentStatus = #{record.agentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.mchStatus != null">
        mchStatus = #{record.mchStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_sys_message
    set id = #{record.id,jdbcType=BIGINT},
    title = #{record.title,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=TINYINT},
    createUserId = #{record.createUserId,jdbcType=BIGINT},
    isvStatus = #{record.isvStatus,jdbcType=TINYINT},
    agentStatus = #{record.agentStatus,jdbcType=TINYINT},
    mchStatus = #{record.mchStatus,jdbcType=TINYINT},
    createTime = #{record.createTime,jdbcType=TIMESTAMP},
    updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
    message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_sys_message
    set id = #{record.id,jdbcType=BIGINT},
    title = #{record.title,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=TINYINT},
    createUserId = #{record.createUserId,jdbcType=BIGINT},
    isvStatus = #{record.isvStatus,jdbcType=TINYINT},
    agentStatus = #{record.agentStatus,jdbcType=TINYINT},
    mchStatus = #{record.mchStatus,jdbcType=TINYINT},
    createTime = #{record.createTime,jdbcType=TIMESTAMP},
    updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.xxpay.core.entity.SysMessage">
    update t_sys_message
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null">
        createUserId = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="isvStatus != null">
        isvStatus = #{isvStatus,jdbcType=TINYINT},
      </if>
      <if test="agentStatus != null">
        agentStatus = #{agentStatus,jdbcType=TINYINT},
      </if>
      <if test="mchStatus != null">
        mchStatus = #{mchStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.xxpay.core.entity.SysMessage">
    update t_sys_message
    set title = #{title,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      createUserId = #{createUserId,jdbcType=BIGINT},
      isvStatus = #{isvStatus,jdbcType=TINYINT},
      agentStatus = #{agentStatus,jdbcType=TINYINT},
      mchStatus = #{mchStatus,jdbcType=TINYINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xxpay.core.entity.SysMessage">
    update t_sys_message
    set title = #{title,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      createUserId = #{createUserId,jdbcType=BIGINT},
      isvStatus = #{isvStatus,jdbcType=TINYINT},
      agentStatus = #{agentStatus,jdbcType=TINYINT},
      mchStatus = #{mchStatus,jdbcType=TINYINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>